.TH csvmode 3am "May 2016" "GAWK Extension Library (gawkextlib)" "GNU Awk Extension Modules" 
.SH NAME
 
.PP
csvmode \- direct processing of Comma-Separated-Values (CSV) data files with gawk. 
.SH SYNOPSIS
 
.IP
.nf

\fR\f[C]\fB@include "csv"\fR\f[C]
BEGIN { \fBCSVMODE\fR\f[C] = 1 }
  \fI... rules with \f(BI$0\fI, \f(BI$1\fI, ... \f(BI$NF\fI, \f(BICSVRECORD\fI, ...\fR\f[C]

\fBcsvfield\fR\f[C](\fIname, default\fR\f[C])
\fBcsvprint\fR\f[C](\fIrecord\fR\f[C], \fIoption\fR\f[C]...)
\fBcsvprint0\fR\f[C]()\fR

.fi
 
.SH DESCRIPTION
 
.PP
The \fIgawk-csv\fR extension can directly process CSV data files. Uses some specific variables:  
.TP
\fBCSVMODE\fR
 Setting \fBCSVMODE=1\fR lets CSV formatted input data records to be automatically converted to regular awk records with fixed field separators, and delivered as \fB$0\fR. And \fB$1\fR .. \fB$NF\fR are also set accordingly. Setting \fBCSVMODE=0\fR disables the conversion, and input files are processed the usual way. See NOTE 1. The conversion can be customized by some control variables:
.RS
 
.TP
\fBCSVFS\fR
 The resulting field separator, that temporarily overrides the \fR\f[C]FS\fR and \fR\f[C]OFS\fR predefined variables. If not set, a null char '\\0' is used. See NOTE 1. 
.TP
\fBCSVCOMMA\fR
 The input CSV field delimiter. Default comma ','. 
.TP
\fBCSVQUOTE\fR
 The input CSV quoting character. Default double quote '"'. 
.RE
 
.TP
\fBCSVRECORD\fR
 The original CSV input record.  
.PP
If the CSV file has a header record, the fields can also be accessed by name:  
.TP
\fBcsvfield(\fIname\fR [, \fImissing\fR])\fR
 Returns the named field of the current record. If there is no column named \fIname\fR, then return \fImissing\fR, or a null value if not given. 
.TP
\fBcsvprint([\fIrecord\fR, [\fIfs\fR [, \fIcomma\fR [, \fIquote\fR]]]])\fR
 A convenience function to format and print the given record with a single call. If called without arguments it prints either $0 formatted as CSV or \fR\f[C]CSVRECORD\fR, depending on \fR\f[C]CSVMODE\fR. Arguments are like \fR\f[C]csvformat()\fR. 
.TP
\fBcsvprint0()\fR
 A convenience function to print the original input record as such. Prints either $0 or \fR\f[C]CSVRECORD\fR, depending on \fR\f[C]CSVMODE\fR.  
.PP
\fR\f[C]CSVMODE\fR, \fR\f[C]CSVFS\fR, \fR\f[C]CSVCOMMA\fR and \fR\f[C]CSVQUOTE\fR are checked only at \fR\f[C]BEGINFILE\fR time. Changing them in the middle of a file processing takes no effect. 
.PP
\fR\f[C]CSVRECORD\fR is updated for each CSV input record. 
.PP
The CSV input mode accepts fields with embedded newlines, tabs and other control characters, except null characters ('\\0'). 
.SH EXAMPLES
 
.PP
Extract CSV records with some specific value in the second field: 
.IP
.nf

\fR\f[C]BEGIN {CSVMODE = 1}
$2=="some value" {print CSVRECORD}\fR

.fi
 
.PP
Process CSV files with fields separated by semicolons instead of commas: 
.IP
.nf

\fR\f[C]BEGIN {CSVMODE = 1; CSVFS = ";"}
  ... processing rules ...\fR

.fi
 
.PP
Print a specific named field of every record: 
.IP
.nf

\fR\f[C]BEGIN {CSVMODE = 1;}
{ print csvfield("City") }\fR

.fi
 
.PP
Print records that contain commas as data, in both normal and CSV modes: 
.IP
.nf

\fR\f[C]grepcommas.awk:
BEGINFILE {
    CSVMODE = (FILENAME ~ /\\.csv$/)
}
/,/ { csvprint0() }

Sample invocation:
gawk -f grepcommas.awk a.txt, b.csv, c.txt\fR

.fi
 
.SH NOTES
 
.PP
\fB(1)\fR If the user code has a \fR\f[C]BEGINFILE\fR action that sets \fR\f[C]CSV\fI-mode\fR\f[C]\fR variables depending on the current file, this action must appear before the \fR\f[C]@include "csv"\fR clause: 
.IP
.nf

\fR\f[C]BEGINFILE {
    CSVMODE = (FILENAME ~ /\\.csv$/)  # switch mode depending on the file type
}
@include "csv"\fR

.fi
 
.SH BUGS
 
.PP
Null characters are not allowed in fields. A null character terminates the record processing. 
.SH AUTHOR
.PP
Manuel Collado, \fBm-collado@users.sourceforge.net\fR.
.SH SEE ALSO
.PP
\fIXML Processing With gawk\fR, \fIcsvparse(3am)\fR.
.SH COPYING PERMISSIONS
.PP
Copyright (C) 2018, Free Software Foundation, Inc.
.PP
Permission is granted to make and distribute verbatim copies of this manual page provided the copyright notice and this permission notice are preserved on all copies.
.PP
Permission is granted to copy and distribute modified versions of this manual page under the conditions for verbatim copying, provided that the entire resulting derived work is distributed under the terms of a permission notice identical to this one.
.PP
Permission is granted to copy and distribute translations of this manual page into another language, under the above conditions for modified versions, except that this permission notice may be stated in a translation approved by the Foundation.  